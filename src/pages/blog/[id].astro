---
import BaseLayout from '../../layouts/BaseLayout.astro'
import { getPost, getBlogPosts } from '../../lib/notion'
import type { BlogPostPage, BlogPost } from '../../lib/notion'
import { Calendar, Edit, ArrowLeft } from 'lucide-react'

const { id } = Astro.params

if (!id) {
  return Astro.redirect('/404')
}

let post: BlogPostPage | null = null
let otherPosts: BlogPost[] = []

try {
  // Fetch the current post and all other posts in parallel
  const [currentPost, allPosts] = await Promise.all([
    getPost(id),
    getBlogPosts(),
  ])

  post = currentPost
  // Filter out the current post from the list of other posts
  otherPosts = allPosts.filter((p) => p.id !== id).slice(0, 5) // Show up to 5 other posts
} catch (error) {
  console.error('Error loading blog post:', error)
  return Astro.redirect('/404')
}

if (!post) {
  return Astro.redirect('/404')
}

function formatDate(dateString: string): string {
  return new Date(dateString).toLocaleDateString('en-US', {
    year: 'numeric',
    month: 'long',
    day: 'numeric',
  })
}
---

<BaseLayout title={`${post.title} | Blog`}>
  <main class="container mx-auto px-4 py-8">
    <!-- Floating back button - fixed position that stays visible when scrolling -->
    <div class="fixed left-4 top-24 z-10 hidden md:block">
      <a
        href="/blog"
        class="flex h-10 w-10 items-center justify-center rounded-full bg-primary/10 text-primary transition-colors hover:bg-primary/20 dark:bg-primary/20 dark:hover:bg-primary/30"
        aria-label="Back to Blog"
      >
        <ArrowLeft className="h-5 w-5" />
      </a>
    </div>

    <!-- Two column layout for desktop -->
    <div class="flex flex-col gap-8 lg:flex-row lg:gap-12">
      <!-- Main content column - wider than before -->
      <div class="lg:w-3/4">
        <!-- Mobile back button -->
        <div class="mb-6 md:hidden">
          <a
            href="/blog"
            class="inline-flex items-center text-sm font-medium text-primary hover:underline"
          >
            ← Back to Blog
          </a>
        </div>

        <article
          class="prose prose-lg dark:prose-invert mx-auto w-full max-w-5xl"
        >
          <h1 class="mb-4">{post.title}</h1>
          <div
            class="mb-8 flex items-center gap-4 text-sm text-gray-600 dark:text-gray-400"
          >
            <div class="flex items-center gap-1">
              <Calendar className="h-4 w-4" />
              <span>{formatDate(post.createdTime)}</span>
            </div>
            <div class="flex items-center gap-1">
              <Edit className="h-4 w-4" />
              <span>{formatDate(post.lastEditedTime)}</span>
            </div>
          </div>
          <div class="notion-content" set:html={post.content} />
        </article>
      </div>

      <!-- Sidebar with other posts -->
      <div class="lg:w-1/4">
        <div
          class="sticky top-24 rounded-lg border border-gray-200 bg-white p-4 dark:border-gray-700 dark:bg-gray-800"
        >
          <h3 class="mb-4 text-lg font-semibold">More Blog Posts</h3>
          {
            otherPosts.length > 0 ? (
              <ul class="space-y-4">
                {otherPosts.map((otherPost) => (
                  <li>
                    <a
                      href={`/blog/${otherPost.id}`}
                      class="block rounded-md p-2 transition-colors hover:bg-gray-100 dark:hover:bg-gray-700"
                    >
                      <h4 class="font-medium text-gray-900 dark:text-gray-100">
                        {otherPost.title}
                      </h4>
                      <p class="mt-1 text-sm text-gray-600 dark:text-gray-400">
                        {formatDate(otherPost.createdTime)}
                      </p>
                    </a>
                  </li>
                ))}
              </ul>
            ) : (
              <p class="text-gray-600 dark:text-gray-400">
                No other posts available.
              </p>
            )
          }
          <div class="mt-6">
            <a
              href="/blog"
              class="inline-flex items-center text-sm font-medium text-primary hover:underline"
            >
              View all posts →
            </a>
          </div>
        </div>
      </div>
    </div>
  </main>
</BaseLayout>

<style is:global>
  .prose {
    max-width: 80ch; /* Increased from 65ch for wider content */
    color: var(--foreground);
  }

  .prose a {
    color: hsl(var(--primary));
    text-decoration: underline;
    font-weight: 500;
  }

  .prose strong {
    color: var(--foreground);
    font-weight: 600;
  }

  .prose h1,
  .prose h2,
  .prose h3,
  .prose h4,
  .prose h5,
  .prose h6 {
    color: var(--foreground);
    font-weight: 700;
    margin-top: 2em;
    margin-bottom: 1em;
    line-height: 1.3;
  }

  .prose h1 {
    font-size: 2.25em;
    margin-top: 0;
  }

  .prose h2 {
    font-size: 1.5em;
  }

  .prose h3 {
    font-size: 1.25em;
  }

  .prose p,
  .prose ul,
  .prose ol {
    margin-top: 1.25em;
    margin-bottom: 1.25em;
  }

  .prose ul {
    list-style-type: disc;
    padding-left: 1.5em;
  }

  .prose ol {
    list-style-type: decimal;
    padding-left: 1.5em;
  }

  .prose li {
    margin-bottom: 0.5em;
  }

  .prose li > ul,
  .prose li > ol {
    margin-top: 0.5em;
    margin-bottom: 0.5em;
  }

  .prose img {
    margin-top: 2em;
    margin-bottom: 2em;
    border-radius: 0.5rem;
  }

  .prose code {
    color: hsl(var(--primary));
    background-color: hsl(var(--muted));
    padding: 0.2em 0.4em;
    border-radius: 0.25em;
    font-size: 0.875em;
  }

  .prose pre {
    background-color: hsl(var(--muted));
    border-radius: 0.5rem;
    overflow-x: auto;
    padding: 1em;
  }

  .prose pre code {
    background-color: transparent;
    padding: 0;
    color: inherit;
  }

  .prose blockquote {
    border-left: 4px solid hsl(var(--border));
    padding-left: 1em;
    font-style: italic;
  }

  .dark .prose {
    color: hsl(var(--foreground));
  }

  .dark .prose a {
    color: hsl(var(--primary));
  }

  .dark .prose strong {
    color: hsl(var(--foreground));
  }

  .dark .prose code {
    color: hsl(var(--primary));
    background-color: hsl(var(--muted));
  }

  .dark .prose pre {
    background-color: hsl(var(--muted));
  }

  .dark .prose blockquote {
    border-left-color: hsl(var(--border));
  }
</style>
